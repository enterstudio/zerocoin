// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zerocoin.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	zerocoin.proto

It has these top-level messages:
	LatestRequest
	AllRequest
	Block
	Blockchain
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Request the latest block on the blockchain.
type LatestRequest struct {
}

func (m *LatestRequest) Reset()                    { *m = LatestRequest{} }
func (m *LatestRequest) String() string            { return proto1.CompactTextString(m) }
func (*LatestRequest) ProtoMessage()               {}
func (*LatestRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Request the whole blockchains.
type AllRequest struct {
}

func (m *AllRequest) Reset()                    { *m = AllRequest{} }
func (m *AllRequest) String() string            { return proto1.CompactTextString(m) }
func (*AllRequest) ProtoMessage()               {}
func (*AllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Block struct {
	Index        uint64 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Hash         string `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	PreviousHash string `protobuf:"bytes,3,opt,name=previousHash" json:"previousHash,omitempty"`
	Timestamp    int64  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Data         string `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto1.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Block) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetPreviousHash() string {
	if m != nil {
		return m.PreviousHash
	}
	return ""
}

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Blockchain struct {
	Blockchain []*Block `protobuf:"bytes,1,rep,name=blockchain" json:"blockchain,omitempty"`
}

func (m *Blockchain) Reset()                    { *m = Blockchain{} }
func (m *Blockchain) String() string            { return proto1.CompactTextString(m) }
func (*Blockchain) ProtoMessage()               {}
func (*Blockchain) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Blockchain) GetBlockchain() []*Block {
	if m != nil {
		return m.Blockchain
	}
	return nil
}

func init() {
	proto1.RegisterType((*LatestRequest)(nil), "proto.LatestRequest")
	proto1.RegisterType((*AllRequest)(nil), "proto.AllRequest")
	proto1.RegisterType((*Block)(nil), "proto.Block")
	proto1.RegisterType((*Blockchain)(nil), "proto.Blockchain")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ZeroCoin service

type ZeroCoinClient interface {
	QueryLatest(ctx context.Context, opts ...grpc.CallOption) (ZeroCoin_QueryLatestClient, error)
	QueryAll(ctx context.Context, opts ...grpc.CallOption) (ZeroCoin_QueryAllClient, error)
}

type zeroCoinClient struct {
	cc *grpc.ClientConn
}

func NewZeroCoinClient(cc *grpc.ClientConn) ZeroCoinClient {
	return &zeroCoinClient{cc}
}

func (c *zeroCoinClient) QueryLatest(ctx context.Context, opts ...grpc.CallOption) (ZeroCoin_QueryLatestClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ZeroCoin_serviceDesc.Streams[0], c.cc, "/proto.ZeroCoin/QueryLatest", opts...)
	if err != nil {
		return nil, err
	}
	x := &zeroCoinQueryLatestClient{stream}
	return x, nil
}

type ZeroCoin_QueryLatestClient interface {
	Send(*LatestRequest) error
	Recv() (*Block, error)
	grpc.ClientStream
}

type zeroCoinQueryLatestClient struct {
	grpc.ClientStream
}

func (x *zeroCoinQueryLatestClient) Send(m *LatestRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *zeroCoinQueryLatestClient) Recv() (*Block, error) {
	m := new(Block)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zeroCoinClient) QueryAll(ctx context.Context, opts ...grpc.CallOption) (ZeroCoin_QueryAllClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ZeroCoin_serviceDesc.Streams[1], c.cc, "/proto.ZeroCoin/QueryAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &zeroCoinQueryAllClient{stream}
	return x, nil
}

type ZeroCoin_QueryAllClient interface {
	Send(*AllRequest) error
	Recv() (*Blockchain, error)
	grpc.ClientStream
}

type zeroCoinQueryAllClient struct {
	grpc.ClientStream
}

func (x *zeroCoinQueryAllClient) Send(m *AllRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *zeroCoinQueryAllClient) Recv() (*Blockchain, error) {
	m := new(Blockchain)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ZeroCoin service

type ZeroCoinServer interface {
	QueryLatest(ZeroCoin_QueryLatestServer) error
	QueryAll(ZeroCoin_QueryAllServer) error
}

func RegisterZeroCoinServer(s *grpc.Server, srv ZeroCoinServer) {
	s.RegisterService(&_ZeroCoin_serviceDesc, srv)
}

func _ZeroCoin_QueryLatest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ZeroCoinServer).QueryLatest(&zeroCoinQueryLatestServer{stream})
}

type ZeroCoin_QueryLatestServer interface {
	Send(*Block) error
	Recv() (*LatestRequest, error)
	grpc.ServerStream
}

type zeroCoinQueryLatestServer struct {
	grpc.ServerStream
}

func (x *zeroCoinQueryLatestServer) Send(m *Block) error {
	return x.ServerStream.SendMsg(m)
}

func (x *zeroCoinQueryLatestServer) Recv() (*LatestRequest, error) {
	m := new(LatestRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ZeroCoin_QueryAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ZeroCoinServer).QueryAll(&zeroCoinQueryAllServer{stream})
}

type ZeroCoin_QueryAllServer interface {
	Send(*Blockchain) error
	Recv() (*AllRequest, error)
	grpc.ServerStream
}

type zeroCoinQueryAllServer struct {
	grpc.ServerStream
}

func (x *zeroCoinQueryAllServer) Send(m *Blockchain) error {
	return x.ServerStream.SendMsg(m)
}

func (x *zeroCoinQueryAllServer) Recv() (*AllRequest, error) {
	m := new(AllRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ZeroCoin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ZeroCoin",
	HandlerType: (*ZeroCoinServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "QueryLatest",
			Handler:       _ZeroCoin_QueryLatest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "QueryAll",
			Handler:       _ZeroCoin_QueryAll_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "zerocoin.proto",
}

func init() { proto1.RegisterFile("zerocoin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x50, 0x3d, 0x4f, 0xc3, 0x30,
	0x14, 0xc4, 0x24, 0x41, 0xed, 0x6b, 0x00, 0xf5, 0xa9, 0x43, 0x54, 0x31, 0x44, 0x9e, 0x3c, 0xa0,
	0x0a, 0x15, 0x09, 0x24, 0xb6, 0xc2, 0xc2, 0xc0, 0x82, 0x47, 0x36, 0x37, 0xb5, 0x14, 0x0b, 0x37,
	0x0e, 0xb6, 0x83, 0xf8, 0xf8, 0x01, 0xfc, 0x6d, 0x14, 0xbb, 0xd0, 0x66, 0xf2, 0xbb, 0x3b, 0xdf,
	0xd9, 0xef, 0xe0, 0xec, 0x4b, 0x5a, 0x53, 0x19, 0xd5, 0x2c, 0x5a, 0x6b, 0xbc, 0xc1, 0x2c, 0x1c,
	0xf4, 0x1c, 0x4e, 0x9f, 0x84, 0x97, 0xce, 0x73, 0xf9, 0xd6, 0x49, 0xe7, 0x69, 0x0e, 0xb0, 0xd2,
	0xfa, 0x0f, 0xfd, 0x10, 0xc8, 0xee, 0xb5, 0xa9, 0x5e, 0x71, 0x06, 0x99, 0x6a, 0x36, 0xf2, 0xa3,
	0x20, 0x25, 0x61, 0x29, 0x8f, 0x00, 0x11, 0xd2, 0x5a, 0xb8, 0xba, 0x38, 0x2e, 0x09, 0x1b, 0xf3,
	0x30, 0x23, 0x85, 0xbc, 0xb5, 0xf2, 0x5d, 0x99, 0xce, 0x3d, 0xf6, 0x5a, 0x12, 0xb4, 0x01, 0x87,
	0x17, 0x30, 0xf6, 0x6a, 0x2b, 0x9d, 0x17, 0xdb, 0xb6, 0x48, 0x4b, 0xc2, 0x12, 0xbe, 0x27, 0xfa,
	0xd4, 0x8d, 0xf0, 0xa2, 0xc8, 0x62, 0x6a, 0x3f, 0xd3, 0x3b, 0x80, 0xf0, 0x91, 0xaa, 0x16, 0xaa,
	0xc1, 0x4b, 0x80, 0xf5, 0x3f, 0x2a, 0x48, 0x99, 0xb0, 0xc9, 0x32, 0x8f, 0x9b, 0x2d, 0xc2, 0x35,
	0x7e, 0xa0, 0x2f, 0xbf, 0x61, 0xf4, 0x22, 0xad, 0x79, 0x30, 0xaa, 0xc1, 0x5b, 0x98, 0x3c, 0x77,
	0xd2, 0x7e, 0xc6, 0xad, 0x71, 0xb6, 0x33, 0x0d, 0x4a, 0x98, 0x0f, 0xa2, 0xe8, 0x11, 0x23, 0x57,
	0x04, 0x6f, 0x60, 0x14, 0x8c, 0x2b, 0xad, 0x71, 0xba, 0xd3, 0xf7, 0x4d, 0xcd, 0xa7, 0x87, 0x96,
	0xf0, 0x6c, 0xf4, 0xad, 0x4f, 0x02, 0x7f, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x06, 0x3e,
	0x3f, 0x81, 0x01, 0x00, 0x00,
}
